/* Generated by https://github.com/janjongboom/mbed-js-wrapper-generator */

#include "jerryscript-mbed-util/logging.h"
#include "jerryscript-mbed-library-registry/wrap_tools.h"

#include "GroveEarbudSensor.h"

/**
 * GroveEarbudSensor#registerCallback (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(GroveEarbudSensor, registerCallback) {
    CHECK_ARGUMENT_COUNT(GroveEarbudSensor, registerCallback, (args_count == 2));

    if (args_count == 2) {
        CHECK_ARGUMENT_TYPE_ON_CONDITION(GroveEarbudSensor, registerCallback, 0, object, (args_count == 2));
        CHECK_ARGUMENT_TYPE_ON_CONDITION(GroveEarbudSensor, registerCallback, 1, object, (args_count == 2));

        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        GroveEarbudSensor* native_ptr = reinterpret_cast<GroveEarbudSensor*>(ptr_val);

        uintptr_t arg0_native_handle;
        jerry_get_object_native_handle(args[0], &arg0_native_handle);
        GroveEarbudSensorCallback* arg0 = (GroveEarbudSensorCallback*)arg0_native_handle;
        uintptr_t arg1_native_handle;
        jerry_get_object_native_handle(args[1], &arg1_native_handle);
        void* arg1 = (void*)arg1_native_handle;

        native_ptr->registerCallback(arg0, arg1);
        return jerry_create_undefined();
    }
}

/**
 * GroveEarbudSensor#getHeartRate (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(GroveEarbudSensor, getHeartRate) {
    CHECK_ARGUMENT_COUNT(GroveEarbudSensor, getHeartRate, (args_count == 0));

    if (args_count == 0) {


        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        GroveEarbudSensor* native_ptr = reinterpret_cast<GroveEarbudSensor*>(ptr_val);



        float result = native_ptr->getHeartRate();
        return jerry_create_number(result);
    }
}

/**
 * GroveEarbudSensor#interrupt (native JavaScript method)
 */
DECLARE_CLASS_FUNCTION(GroveEarbudSensor, interrupt) {
    CHECK_ARGUMENT_COUNT(GroveEarbudSensor, interrupt, (args_count == 0));

    if (args_count == 0) {


        uintptr_t ptr_val;
        jerry_get_object_native_handle(this_obj, &ptr_val);

        GroveEarbudSensor* native_ptr = reinterpret_cast<GroveEarbudSensor*>(ptr_val);



        native_ptr->interrupt();
        return jerry_create_undefined();
    }
}

/**
 * GroveEarbudSensor#destructor
 *
 * Called if/when the GroveEarbudSensor is GC'ed.
 */
void NAME_FOR_CLASS_NATIVE_DESTRUCTOR(GroveEarbudSensor)(const uintptr_t native_handle) {
    delete reinterpret_cast<GroveEarbudSensor*>(native_handle);
}


/**
 * mbed_js_wrap_native_object (turns a native GroveEarbudSensor object into a JS object)
 */
jerry_value_t mbed_js_wrap_native_object(GroveEarbudSensor* ptr) {
    uintptr_t native_ptr = (uintptr_t) ptr;

    jerry_value_t js_object = jerry_create_object();
    jerry_set_object_native_handle(js_object, native_ptr, NAME_FOR_CLASS_NATIVE_DESTRUCTOR(GroveEarbudSensor));

    ATTACH_CLASS_FUNCTION(js_object, GroveEarbudSensor, registerCallback);
    ATTACH_CLASS_FUNCTION(js_object, GroveEarbudSensor, getHeartRate);
    ATTACH_CLASS_FUNCTION(js_object, GroveEarbudSensor, interrupt);

    return js_object;
}

/**
 * GroveEarbudSensor (native JavaScript constructor)
 */
DECLARE_CLASS_CONSTRUCTOR(GroveEarbudSensor) {
    CHECK_ARGUMENT_COUNT(GroveEarbudSensor, __constructor, (args_count == 1 || args_count == 2));

    if (args_count == 1) {
        CHECK_ARGUMENT_TYPE_ON_CONDITION(GroveEarbudSensor, __constructor, 0, object, (args_count == 2));

        uintptr_t arg0_native_handle;
        jerry_get_object_native_handle(args[0], &arg0_native_handle);
        InterruptIn* arg0 = (InterruptIn*)arg0_native_handle;

        // Create the native object
        GroveEarbudSensor* native_obj = new GroveEarbudSensor(arg0);

        return mbed_js_wrap_native_object(native_obj);
    }
    if (args_count == 2) {
        CHECK_ARGUMENT_TYPE_ON_CONDITION(GroveEarbudSensor, __constructor, 0, object, (args_count == 2));
        CHECK_ARGUMENT_TYPE_ON_CONDITION(GroveEarbudSensor, __constructor, 1, object, (args_count == 2));

        uintptr_t arg0_native_handle;
        jerry_get_object_native_handle(args[0], &arg0_native_handle);
        InterruptIn* arg0 = (InterruptIn*)arg0_native_handle;
        uintptr_t arg1_native_handle;
        jerry_get_object_native_handle(args[1], &arg1_native_handle);
        RawSerial* arg1 = (RawSerial*)arg1_native_handle;

        // Create the native object
        GroveEarbudSensor* native_obj = new GroveEarbudSensor(arg0, arg1);

        return mbed_js_wrap_native_object(native_obj);
    }
}

void mbed_js_GroveEarbudSensor_setup() {

}
